openapi: "3.1.0"
info:
  title: "Butler_Identity_Service API"
  description: "Butler_Identity_Service API"
  version: "1.0.0"
servers:
- url: "https://Butler_Identity_Service"
paths:
  /metrics:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Pair_? extends String"
  /large-packet:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  type: "string"
  /users:
    post:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/UserRegistrationDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDto"
  /users/{userId}:
    get:
      description: ""
      parameters:
      - name: "userId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "Connection"
        in: "header"
        required: true
        description: "Websocket Connection parameter"
        schema:
          type: "string"
      - name: "Upgrade"
        in: "header"
        required: true
        description: "Websocket Upgrade parameter"
        schema:
          type: "string"
      - name: "Sec-WebSocket-Key"
        in: "header"
        required: true
        description: "Websocket Sec-WebSocket-Key parameter"
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
        "101":
          description: "Switching Protocols"
          headers:
            Connection:
              required: true
              schema:
                type: "string"
            Upgrade:
              required: true
              schema:
                type: "string"
            Sec-WebSocket-Accept:
              required: true
              schema:
                type: "string"
  /users/login:
    post:
      description: ""
      parameters:
      - name: "email"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "password"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDto"
  /ws:
    get:
      description: ""
      parameters:
      - name: "Connection"
        in: "header"
        required: true
        description: "Websocket Connection parameter"
        schema:
          type: "string"
      - name: "Upgrade"
        in: "header"
        required: true
        description: "Websocket Upgrade parameter"
        schema:
          type: "string"
      - name: "Sec-WebSocket-Key"
        in: "header"
        required: true
        description: "Websocket Sec-WebSocket-Key parameter"
        schema:
          type: "string"
      responses:
        "101":
          description: "Switching Protocols"
          headers:
            Connection:
              required: true
              schema:
                type: "string"
            Upgrade:
              required: true
              schema:
                type: "string"
            Sec-WebSocket-Accept:
              required: true
              schema:
                type: "string"
components:
  schemas:
    Pair:
      type: "object"
      properties: {}
    Pair_? extends String:
      type: "object"
      properties:
        first:
          type: "object"
        second:
          type: "object"
    UserRegistrationDto:
      type: "object"
      properties:
        email:
          type: "string"
        password:
          type: "string"
        userName:
          type: "string"
      required:
      - "email"
      - "password"
      - "userName"
    AddressDto:
      type: "object"
      properties:
        street:
          type: "string"
        city:
          type: "string"
        state:
          type: "string"
        zip:
          type: "string"
      required:
      - "street"
      - "city"
      - "state"
      - "zip"
    UserDto:
      type: "object"
      properties:
        id:
          type: "string"
        email:
          type: "string"
        username:
          type: "string"
        displayName:
          type: "string"
        phone:
          type: "string"
        fullName:
          type: "string"
        photoUrl:
          type: "string"
        address:
          $ref: "#/components/schemas/AddressDto"
      required:
      - "email"
      - "username"
    Unit:
      type: "object"
      properties: {}