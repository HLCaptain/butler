[versions]
butler = "2.0.0-alpha"
kotlin = "2.1.0-RC2"
android-minSdk = "26"
android-compileSdk = "35"
ksp = "2.1.0-RC2-1.0.28"
agp = "8.7.2"
compose = "1.7.1"
compose-android = "1.7.5"
ktor = "3.0.1"
koin = "4.0.0"
koin-annotations = "2.0.0-Beta1"
coroutines = "1.9.0"
serialization = "1.7.3"
aboutlibraries = "11.2.2"
room = "2.7.0-alpha11"
logback = "1.5.11"
commonsCodec = "1.17.1"
okhttpLoggingInterceptor = "5.0.0-alpha.14"
prometheus = "1.12.3"
exposed = "0.56.0"
postgres = "42.7.4"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
appcompat = "1.7.0"
material = "1.12.0"
material-adaptive = "1.0.1"

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
google-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
buildconfig = { id = "com.github.gmazzo.buildconfig", version = "5.5.0" }
aboutlibraries = { id = "com.mikepenz.aboutlibraries.plugin", version.ref = "aboutlibraries" }
androidx-room = { id = "androidx.room", version.ref = "room" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }

# Convention plugins
illyan-butler-kotlinMultiplatform = { id = "illyan.butler.kotlinMultiplatform" }
illyan-butler-composeMultiplatform = { id = "illyan.butler.composeMultiplatform" }
illyan-butler-kotlinMultiplatformLibrary = { id = "illyan.butler.kotlinMultiplatformLibrary" }
illyan-butler-composeMultiplatformLibrary = { id = "illyan.butler.composeMultiplatformLibrary" }
illyan-butler-koinForKotlinMultiplatform = { id = "illyan.butler.koinForKotlinMultiplatform" }
illyan-butler-koinForComposeMultiplatform = { id = "illyan.butler.koinForComposeMultiplatform" }

[libraries]
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }
ktor-serialization-kotlinx-protobuf = { module = "io.ktor:ktor-serialization-kotlinx-protobuf", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core" }
koin-logger-slf4j = { module = "io.insert-koin:koin-logger-slf4j" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-core-viewmodel = { module = "io.insert-koin:koin-core-viewmodel", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android" }
koin-test = { module = "io.insert-koin:koin-test" }

# No Koin Annotations BOM due to problem with KSP being problematic to add to a multi-module project
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koin-annotations" }
koin-ksp = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-annotations" }

androidx-core = { module = "androidx.core:core-ktx", version = "1.15.0" }
androidx-activity = { module = "androidx.activity:activity-ktx", version = "1.9.3" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version = "1.9.3" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-android" }

androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
androidx-room-common = { module = "androidx.room:room-common", version.ref = "room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
androidx-sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version = "2.5.0-alpha11" }

android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
compose-gradlePlugin = { module = "org.jetbrains.compose:org.jetbrains.compose.gradle.plugin", version.ref = "compose" }
ksp-gradlePlugin = { module = "com.google.devtools.ksp:symbol-processing-gradle-plugin", version.ref = "ksp" }

jetbrains-lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version = "2.8.4" }
jetbrains-navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version = "2.8.0-alpha10" }

napier = { module = "io.github.aakira:napier", version = "2.7.1" }
store = { module = "org.mobilenativefoundation.store:store5", version = "5.1.0-alpha05" }
uuid = { module = "com.benasher44:uuid", version = "0.8.4" }
desugar = { module = "com.android.tools:desugar_jdk_libs", version = "2.1.3" }
korge-core = { module = "com.soywiz:korlibs-audio", version = "6.0.0-alpha1" }
filepicker = { module = "com.darkrockstudios:mpfilepicker", version = "3.1.0" }
ffmpeg-kit = { module = "com.arthenica:ffmpeg-kit-full", version = "6.0-2" }
coil = { module = "io.coil-kt.coil3:coil", version = "3.0.0-rc02" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose-core", version = "3.0.0-rc02" }
haze = { module = "dev.chrisbanes.haze:haze-materials", version = "0.7.2" }

kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
kotlinx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version = "0.25.0" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.6.1" }
kotlinx-io = { module = "org.jetbrains.kotlinx:kotlinx-io-core", version = "0.5.4" }

aboutlibraries-core = { module = "com.mikepenz:aboutlibraries-core", version.ref = "aboutlibraries" }

ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-headers = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-metrics = { module = "io.ktor:ktor-server-metrics", version.ref = "ktor" }
ktor-server-call-id = { module = "io.ktor:ktor-server-call-id", version.ref = "ktor" }
ktor-server-swagger = { module = "io.ktor:ktor-server-swagger", version.ref = "ktor" }
ktor-server-openapi = { module = "io.ktor:ktor-server-openapi", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression", version.ref = "ktor" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgres" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
koin-ktor = { module = "io.insert-koin:koin-ktor" }
koin-annotations-bom = { module = "io.insert-koin:koin-annotations-bom", version.ref = "koin-annotations" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commonsCodec" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttpLoggingInterceptor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
opentelemetry-api = { module = "io.opentelemetry:opentelemetry-api", version = "1.44.1" }
opentelemetry-sdk = { module = "io.opentelemetry:opentelemetry-sdk", version = "1.44.1" }
opentelemetry-exporter-otlp = { module = "io.opentelemetry:opentelemetry-exporter-otlp", version = "1.44.1" }
opentelemetry-exporter-prometheus = { module = "io.opentelemetry:opentelemetry-exporter-prometheus", version = "1.44.1-alpha" }
opentelemetry-trace = { module = "io.opentelemetry:opentelemetry-extension-trace-propagators", version = "1.44.1" }
opentelemetry-autoconfigure = { module = "io.opentelemetry:opentelemetry-sdk-extension-autoconfigure", version = "1.44.1" }
opentelemetry-ktor = { module = "io.opentelemetry.instrumentation:opentelemetry-ktor-3.0", version = "2.10.0-alpha" }
opentelemetry-resources = { module = "io.opentelemetry.instrumentation:opentelemetry-resources", version = "2.10.0-alpha" }
ktor-server-metrics-micrometer = { module = "io.ktor:ktor-server-metrics-micrometer", version.ref = "ktor" }
micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "prometheus" }
nanoid = { module = "com.aventrix.jnanoid:jnanoid", version = "2.0.0" }
spring-security-crypto = { module = "org.springframework.security:spring-security-crypto", version = "6.3.4" }
openai-client = { module = "com.aallam.openai:openai-client", version = "3.7.2" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

material-adaptive = { module = "org.jetbrains.compose.material3.adaptive:adaptive", version.ref = "material-adaptive" }
material-adaptive-layout = { module = "org.jetbrains.compose.material3.adaptive:adaptive-layout", version.ref = "material-adaptive" }
material-adaptive-navigation = { module = "org.jetbrains.compose.material3.adaptive:adaptive-navigation", version.ref = "material-adaptive" }
