openapi: "3.0.0"
info:
  title: "Butler_API_Gateway API"
  description: "Butler_API_Gateway API"
  version: "1.0.0"
servers:
- url: "https://localhost:8080"
paths:
  /:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Pair_? extends String"
  /chats:
    get:
      description: ""
      parameters:
      - name: "Connection"
        in: "header"
        required: true
        description: "Websocket Connection parameter"
        schema:
          type: "string"
      - name: "Upgrade"
        in: "header"
        required: true
        description: "Websocket Upgrade parameter"
        schema:
          type: "string"
      - name: "Sec-WebSocket-Key"
        in: "header"
        required: true
        description: "Websocket Sec-WebSocket-Key parameter"
        schema:
          type: "string"
      responses:
        "101":
          description: "Switching Protocols"
          headers:
            Connection:
              required: true
              schema:
                type: "string"
            Upgrade:
              required: true
              schema:
                type: "string"
            Sec-WebSocket-Accept:
              required: true
              schema:
                type: "string"
  /chats/{chatId}:
    get:
      description: ""
      parameters:
      - name: "chatId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "Connection"
        in: "header"
        required: true
        description: "Websocket Connection parameter"
        schema:
          type: "string"
      - name: "Upgrade"
        in: "header"
        required: true
        description: "Websocket Upgrade parameter"
        schema:
          type: "string"
      - name: "Sec-WebSocket-Key"
        in: "header"
        required: true
        description: "Websocket Sec-WebSocket-Key parameter"
        schema:
          type: "string"
      responses:
        "101":
          description: "Switching Protocols"
          headers:
            Connection:
              required: true
              schema:
                type: "string"
            Upgrade:
              required: true
              schema:
                type: "string"
            Sec-WebSocket-Accept:
              required: true
              schema:
                type: "string"
  /chats/{chatId}/messages:
    post:
      description: ""
      parameters:
      - name: "chatId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/MessageDto"
        required: true
      responses:
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ServerResponse_T"
  /chats/{chatId}/messages/{messageId}:
    delete:
      description: ""
      parameters:
      - name: "chatId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "messageId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ServerResponse_T"
    put:
      description: ""
      parameters:
      - name: "chatId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "messageId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/MessageDto"
        required: true
      responses:
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ServerResponse_T"
  /large-packet:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  type: "string"
  /login:
    post:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/UserLoginDto"
        required: true
      responses:
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ServerResponse_T"
  /me:
    get:
      description: ""
      responses:
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ServerResponse_T"
  /refresh-access-token:
    post:
      description: ""
      responses:
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ServerResponse_T"
  /signup:
    post:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/UserRegistrationDto"
        required: true
      responses:
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ServerResponse_T"
components:
  schemas:
    ResponseStatus:
      type: "object"
      properties:
        errorCodes:
          type: "array"
          items:
            type: "integer"
            format: "int32"
        httpStatusCode:
          type: "integer"
          format: "int32"
    ServerResponse:
      type: "object"
      properties:
        status:
          $ref: "#/components/schemas/ResponseStatus"
      required:
      - "status"
    ServerResponse_String:
      type: "object"
      properties:
        value:
          type: "string"
        status:
          $ref: "#/components/schemas/ResponseStatus"
    Pair:
      type: "object"
      properties: {}
    Pair_? extends String:
      type: "object"
      properties:
        first:
          type: "object"
        second:
          type: "object"
    ServerResponse_T:
      type: "object"
      properties:
        status:
          $ref: "#/components/schemas/ResponseStatus"
    MessageDto:
      type: "object"
      properties:
        id:
          type: "string"
        senderId:
          type: "string"
        message:
          type: "string"
        contentUrls:
          type: "array"
          items:
            type: "string"
        time:
          type: "integer"
          format: "int64"
        chatId:
          type: "string"
      required:
      - "contentUrls"
    ChatDto:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
        members:
          type: "array"
          items:
            type: "string"
        lastFewMessages:
          type: "array"
          items:
            $ref: "#/components/schemas/MessageDto"
      required:
      - "members"
      - "lastFewMessages"
    UserLoginDto:
      type: "object"
      properties:
        email:
          type: "string"
        password:
          type: "string"
      required:
      - "email"
      - "password"
    UserRegistrationDto:
      type: "object"
      properties:
        email:
          type: "string"
        userName:
          type: "string"
        password:
          type: "string"
      required:
      - "email"
      - "userName"
      - "password"